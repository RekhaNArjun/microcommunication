#######################################################
# API                                                 #
#######################################################

kind: Deployment
apiVersion: apps/v1
metadata:
  name: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: api
          image: robinmanuelthiel/microcommunication-api:{{ .Values.apiImageTag }}
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"

---

#######################################################
# Web Frontend                                        #
#######################################################

kind: Deployment
apiVersion: apps/v1
metadata:
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
        - name: web
          image: robinmanuelthiel/microcommunication-web:{{ .Values.webImageTag }}
          imagePullPolicy: Always
          env:
          - name: API_URL
            value: "http://api:8080"
          - name: API_KEY
            value: ""
          ports:
          - containerPort: 8080
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
